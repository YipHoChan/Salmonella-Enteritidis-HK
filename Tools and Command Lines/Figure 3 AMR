# preparation of the csv input file for R

python3
import pandas as pd

#AMR genotype
df = pd.read_csv("AMR_2columns.csv")
pivot_table = df.pivot_table(index= 'ID', columns = 'Resistance gene', aggfunc = lambda x: 1)
pivot_table = pivot_table.fillna(0)
pivot_table.to_csv("AMR_ready.csv")
#further revision and save as "csv_AMR_ready_tree_20230914.csv"

#AMR phenotype
df = pd.read_csv("AMR_Location_Phenotype_2columns.csv")
pivot_table = df.pivot_table(index='id', columns='Phenotype', aggfunc='size', fill_value=0)
pivot_table.to_csv("AMR_Location_Phenotype_ready.csv")
#further revision and save as "AMR_Location_Phenotype_ready2.csv"



R

# Figure 3A
library(pacman)
p_load(assertthat,tidyverse,ggraph,igraph,ggmap,scatterpie,RColorBrewer)

nodes = read.csv("LonLatrmHKlabel.csv")
edges = read.csv("edges.csv")

edges <- edges%>%mutate(category=as.factor(category))
edges_for_plot <- edges%>%
  inner_join(nodes%>%select(id, lon, lat),by=c("from"="id"))%>%
  rename(x=lon, y=lat)%>%
  inner_join(nodes%>%select(id,lon,lat),by=c("to"="id"))%>%
  rename(xend=lon,yend=lat)
assert_that(nrow(edges_for_plot)==nrow(edges))

#Map sea
maptheme <- theme(
   panel.grid = element_blank(),
   axis.text = element_blank(),
   axis.ticks = element_blank(),
   axis.title = element_blank(),
   legend.position = "right",
   panel.background = element_rect(fill="#B9E3F9"),
   plot.margin = unit(c(0,0,0.5,0),"cm")
 )

#Map continents
m = map_data("world")
p = c("China", "Taiwan", "Australia", "South Africa", "UK", "USA", "Canada")
country_shape <- geom_polygon(aes(x=long, y=lat, group=group),
                              data=map_data("world"),
                              fill = ifelse(m$region %in% p, "#BEF75B", "white"), color="#515151",linewidth=0.2)

#Map dimension
mapcoords <- coord_fixed(xlim=c(-150,180), ylim=c(-55,80))

Set1 = brewer.pal(9, "Set1")
Set2 = brewer.pal(12, "Set2")
#palette1[1,2,3]
palette1 = Set1[3:1]
#palette2[4]
palette2 = Set1[4]
#palette3[5]
palette3 = Set1[9]
#palette4[6,7]
palette4 = Set2[1:2]
#palette5[8,9]
palette5 = Set1[8:7]
#combined palette
combined_palette = c(palette1, palette2, palette3, palette4, palette5)
map_curve_colour = c(combined_palette[3], combined_palette[7], combined_palette[9], combined_palette[2], combined_palette[8], combined_palette[1], combined_palette[6])
my_colours1 = brewer.pal(9, "Set1")
my_colours2 = brewer.pal(11, "PiYG")
my_colours3 = brewer.pal(8, "Accent")
my_colours4 = brewer.pal(9, "Pastel1")
piechartcolour = c(my_colours4[1], my_colours1[2], my_colours1[4:7], my_colours2[11], my_colours3[8], my_colours3[6], "#7D79FA", "#01D158")

scatterpiedata = read.csv("AMR_Location_Phenotype_ready2.csv")
ggplot(nodes) + country_shape +
  geom_scatterpie(data = scatterpiedata, aes(x=longitude, y=latitude, r=13), cols = c("Aminoglycoside", "Beta.lactam", "Colistin", "Lincosamide", "Phenicol", "Phosphonic", "Quinolone", "Rifampicin", "Sulfonamide", "Tetracycline", "Trimethoprim"), color="black", alpha=.85) + scale_fill_manual(values = piechartcolour, labels = c("Aminoglycoside", "Beta-lactam", "Colistin", "Lincosamide", "Phenicol", "Phosphonic", "Quinolone", "Rifampicin", "Sulfonamide", "Tetracycline", "Trimethoprim")) +
  geom_curve(aes(x=x,y=y,xend=xend,yend=yend,color=category),
             data=edges_for_plot,curvature = 0.33,alpha=0.5, size = 1.8) + scale_color_manual(values = map_curve_colour) +
  scale_size_continuous(guide = FALSE,range = c(0.25,2))+ 
  geom_point(aes(x=lon,y=lat),  # draw nodes
             shape=21,fill="white",color="black",stroke=0.5)+
  scale_size_continuous(guide = FALSE, range = c(1,6))+
  geom_text(aes(x=lon,y=lat,label=name), # draw text labels
            hjust=1,vjust =0, nudge_x = 2.5,nudge_y = 2.5,
            size=4,color="black",fontface="bold")+
  mapcoords + maptheme + guides(color = "none") + labs(fill = "AMR Phenotypes")



# Figure 3B
R
library(ggtree)
library(ggplot2)
library(RColorBrewer)
library(dplyr)

#read tree
tree = read.tree("resultnewick.tre")
#read AMR metadata
AMR = read.csv("csv_AMR_ready_tree_20230914.csv")
rnames = AMR$ID
AMR = AMR %>% select (-ID)
rownames(AMR) <- rnames
AMR = as.matrix(AMR)
Mycolnames = c("aac(6')-Iaa", "aac(3)-IId", "aac(3)-IV" ,"aadA1", "aadA17", "aadA2b", "aadA5", "aph(3')-Ia", "aph(3'')-Ib", "aph(4)-Ia", "aph(6)-Id", "blaCTX-M-55", "blaCTX-M-64", "blaOXA-10", "blaTEM-104", "blaTEM-106", "blaTEM-126", "blaTEM-135", "blaTEM-141", "blaTEM-148", "blaTEM-176", "blaTEM-186", "blaTEM-198", "blaTEM-1B", "blaTEM-1D", "blaTEM-206", "blaTEM-207", "blaTEM-209", "blaTEM-210", "blaTEM-214", "blaTEM-216", "blaTEM-217", "blaTEM-220", "blaTEM-230", "blaTEM-234", "blaTEM-30", "blaTEM-33", "blaTEM-34", "blaTEM-57", "blaTEM-70", "mcr-1.1", "mcr-1.26", "lnu(F)", "cmlA1", "floR", "ARR-2", "sul1", "sul2", "sul3", "tet(A)", "dfrA1", "dfrA17", "fosA4", "qnrB19", "qnrS1")
colnames(AMR) = Mycolnames
#read location information
map <- read.csv("Phylogenetic_tree_metadata_20230904.csv", header=TRUE)

Set1 = brewer.pal(9, "Set1")
Set2 = brewer.pal(12, "Set2")
#palette1
palette1 = Set1[3:1]
#palette2
palette2 = Set1[4]
#palette3
palette3 = Set1[9]
#palette4
palette4 = Set2[1:2]
#palette5
palette5 = Set1[8:7]
#combined palette
combined_palette = c(palette1, palette2, palette3, palette4, palette5)
my_colors = brewer.pal(8, "Set2")

p1 <- ggtree(tree, branch.length="none") %<+% map + geom_tiplab(size=0.9, aes(color=Location)) + geom_tippoint(size =0.5, aes(color=Location)) + scale_color_manual(values = combined_palette) + guides(color = guide_legend(override.aes = list(size = 5)))

p2 = p1 + geom_hilight(node=210, fill=my_colors[2]) + geom_hilight(node=238, fill=my_colors[3]) + geom_hilight(node=294, fill=my_colors[4]) + geom_hilight(node=271, fill=my_colors[5]) + geom_hilight(node=283, fill=my_colors[6])

gheatmap(p2, AMR, offset = 3, width = 4, colnames = TRUE, colnames_position = "top", font.size=2.5, colnames_angle=90, hjust=0, legend_title = "AMR") +
  scale_fill_gradient(low = "white", high = "violetred") +
  scale_x_ggtree() +
  scale_y_continuous(expand = c(0.1, 0.8)) + xlab("Cluster                       Location") +
  scale_x_discrete(position = "top") +
  theme(axis.text.x = element_blank(), axis.text.y = element_blank(), axis.title.x = element_text(hjust = 0.1)) + 
  guides(fill = "none") +
  geom_cladelab(node=238, label="E", align=TRUE, offset = -9.6, textcolor='white', barcolor=my_colors[3], barsize=1, geom='label', fill='#B60F23', alpha = .5) +
  geom_cladelab(node=210, label="D", align=TRUE, offset = -9.6, textcolor='white', barcolor=my_colors[2], barsize=1, geom='label', fill='#B60F23', alpha = .5) +
  geom_cladelab(node=294, label="C", align=TRUE, offset = -9.6, textcolor='white', barcolor=my_colors[4], barsize=1, geom='label', fill='#B60F23', alpha = .5) +
  geom_cladelab(node=271, label="B", align=TRUE, offset = -9.6, textcolor='white', barcolor=my_colors[5], barsize=1, geom='label', fill='#B60F23', alpha = .5) +
  geom_cladelab(node=283, label="A", align=TRUE, offset = -9.6, textcolor='white', barcolor=my_colors[6], barsize=1, geom='label', fill='#B60F23', alpha = .5)




# Figure 3C
library(ggplot2)
library(waffle)

MDR <- c(`61.8% One`=128, `6.8% Two`=14, 
			`23.2% Three`=48, `6.3% Four`=13, `1.4% Five`=3, 
			`0.5% Eight`=1)

waffle(MDR, rows=5, size=0.9,
	title="Number of resistance to antibiotic classes", 
	xlab="Total = 207")
