## run Prokka
prokka --outdir Australia_GCA_010422805 --prefix Australia_GCA_010422805 Australia_GCA_010422805.fna

## run Roary
roary *.gff

## plot Pangenome_frequency & matrix & pie
python3 roary_plots.py accessory_binary_genes.fa.newick gene_presence_absence.csv

## plot heatmap
detachAllPackages <- function() {
  basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
  package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
  package.list <- setdiff(package.list,basic.packages)
  if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}

detachAllPackages()

install_load <- function(Required_Packages) {
  for(package in Required_Packages){
    if (!package %in% installed.packages()) install.packages(package, character.only = TRUE)
    library(package, character.only = TRUE)
  }
}

#Colour labels by locations
Australia = c("Australia_GCA_010422805",      "Australia_GCA_010730655",     
  "Australia_GCA_013218415",      "Australia_GCA_013218545",     
  "Australia_GCA_013218615",      "Australia_GCA_013218635",     
  "Australia_GCA_013218745",      "Australia_GCA_013218805",     
  "Australia_GCA_013218845",      "Australia_GCA_013218875",     
 "Australia_GCA_013218905",      "Australia_GCA_013218965",     
 "Australia_GCA_013218975",      "Australia_GCA_013219015",     
 "Australia_GCA_013219655",      "Australia_GCA_013220405",     
 "Australia_GCA_013220415",      "Australia_GCA_013220585",     
 "Australia_GCA_013220665",      "Australia_GCA_013220685",     
 "Australia_GCA_013220695",      "Australia_GCA_013220705",     
 "Australia_GCA_013220775",      "Australia_GCA_013220815",     
 "Australia_GCA_013220865",      "Australia_GCA_013220885",     
 "Australia_GCA_013220895",      "Australia_GCA_013221005",     
 "Australia_GCA_013226665",      "Australia_GCA_025770365")
Canada = c("Canada_GCA_019582215",         "Canada_GCA_019582255",        
 "Canada_GCA_019582275",         "Canada_GCA_019582375",        
 "Canada_GCA_019582555",         "Canada_GCA_019582565",        
 "Canada_GCA_019582595",         "Canada_GCA_019582655",        
 "Canada_GCA_019582695",         "Canada_GCA_019582735",        
 "Canada_GCA_019582815",         "Canada_GCA_019583915",        
 "Canada_GCA_019584035",         "Canada_GCA_019584055",        
 "Canada_GCA_019584075",         "Canada_GCA_019584265",        
 "Canada_GCA_019584315",         "Canada_GCA_019586325",        
 "Canada_GCA_019588685",         "Canada_GCA_019588725",        
 "Canada_GCA_019588745",         "Canada_GCA_019588765",        
 "Canada_GCA_019588825",         "Canada_GCA_019588865",        
 "Canada_GCA_019588985",         "Canada_GCA_019589065",        
 "Canada_GCA_019589105",         "Canada_GCA_019589125",        
 "Canada_GCA_019589245",         "Canada_GCA_019593325")
HK = c("Hong_Kong_Sal100_19_contigs",  "Hong_Kong_Sal10_19_contigs",  
 "Hong_Kong_Sal11_19_contigs",   "Hong_Kong_Sal13_19_contigs",  
 "Hong_Kong_Sal14_19_contigs",   "Hong_Kong_Sal18_19_contigs",  
 "Hong_Kong_Sal19_19_contigs",   "Hong_Kong_Sal20_19_contigs",  
 "Hong_Kong_Sal25_19_contigs",   "Hong_Kong_Sal26_19_contigs",  
 "Hong_Kong_Sal27_19_contigs",   "Hong_Kong_Sal32_19_contigs",  
 "Hong_Kong_Sal35_19_contigs",   "Hong_Kong_Sal36_19_contigs",  
 "Hong_Kong_Sal50_19_contigs",   "Hong_Kong_Sal52_19_contigs",  
 "Hong_Kong_Sal53_19_contigs",   "Hong_Kong_Sal56_19_contigs",  
 "Hong_Kong_Sal58_19_contigs",   "Hong_Kong_Sal61_19_contigs",  
 "Hong_Kong_Sal63_19_contigs",   "Hong_Kong_Sal64_19_contigs",  
 "Hong_Kong_Sal65_19_contigs",   "Hong_Kong_Sal66_19_contigs",  
 "Hong_Kong_Sal67_19_contigs",   "Hong_Kong_Sal68_19_contigs",  
 "Hong_Kong_Sal69_19_contigs",   "Hong_Kong_Sal6_19_contigs",   
 "Hong_Kong_Sal70_19_contigs",   "Hong_Kong_Sal72_19_contigs",  
 "Hong_Kong_Sal73_19_contigs",   "Hong_Kong_Sal75_19_contigs",  
 "Hong_Kong_Sal76_19_contigs",   "Hong_Kong_Sal77_19_contigs",  
 "Hong_Kong_Sal78_19_contigs",   "Hong_Kong_Sal82_19_contigs",  
 "Hong_Kong_Sal83_19_contigs",   "Hong_Kong_Sal85_19_contigs",  
 "Hong_Kong_Sal86_19_contigs",   "Hong_Kong_Sal88_19_contigs",  
"Hong_Kong_Sal91_19_contigs",   "Hong_Kong_Sal93_19_contigs",  
"Hong_Kong_Sal94_19_contigs",   "Hong_Kong_Sal98_19_contigs",  
"Hong_Kong_Sal99_19_contigs")
China = c("Mainland_China_GCA_023606685",
"Mainland_China_GCA_023606785", "Mainland_China_GCA_023606825",
"Mainland_China_GCA_023606845", "Mainland_China_GCA_023606965",
"Mainland_China_GCA_023607115", "Mainland_China_GCA_023607125",
"Mainland_China_GCA_023607405", "Mainland_China_GCA_023607435",
"Mainland_China_GCA_023607465", "Mainland_China_GCA_023607505",
"Mainland_China_GCA_023607525", "Mainland_China_GCA_023607565",
"Mainland_China_GCA_023607605", "Mainland_China_GCA_023607645",
"Mainland_China_GCA_023607785", "Mainland_China_GCA_023607925",
"Mainland_China_GCA_023608005", "Mainland_China_GCA_023608025",
"Mainland_China_GCA_023608035", "Mainland_China_GCA_023608125",
"Mainland_China_GCA_023608205")
SA = c("South_Africa_GCA_015857065",  
"South_Africa_GCA_015857345",   "South_Africa_GCA_015857565",  
"South_Africa_GCA_015857805",   "South_Africa_GCA_015857815",  
"South_Africa_GCA_015857885",   "South_Africa_GCA_015857965",  
"South_Africa_GCA_015858025",   "South_Africa_GCA_015858085",  
"South_Africa_GCA_015858125",   "South_Africa_GCA_015858145",  
"South_Africa_GCA_015858165",   "South_Africa_GCA_015858325",  
"South_Africa_GCA_015858345",   "South_Africa_GCA_015858425",  
"South_Africa_GCA_015858465",   "South_Africa_GCA_015858525",  
"South_Africa_GCA_015858565",   "South_Africa_GCA_015858585",  
"South_Africa_GCA_015858665",   "South_Africa_GCA_015858675",  
"South_Africa_GCA_015858765",   "South_Africa_GCA_015858845",  
"South_Africa_GCA_015859065",   "South_Africa_GCA_015860085")
Taiwan = c("Taiwan_GCA_010253615",         "Taiwan_GCA_010254655",        
"Taiwan_GCA_010254835",         "Taiwan_GCA_010255195",        
"Taiwan_GCA_010255295")
UK = c("United_Kingdom_GCA_015123095",
"United_Kingdom_GCA_015123275", "United_Kingdom_GCA_015127605",
"United_Kingdom_GCA_015127645", "United_Kingdom_GCA_015127805",
"United_Kingdom_GCA_015128595", "United_Kingdom_GCA_015128665",
"United_Kingdom_GCA_015129935", "United_Kingdom_GCA_015130975",
"United_Kingdom_GCA_015131295", "United_Kingdom_GCA_015131315",
"United_Kingdom_GCA_015131435", "United_Kingdom_GCA_015131575",
"United_Kingdom_GCA_015131615", "United_Kingdom_GCA_015131675",
"United_Kingdom_GCA_015131735", "United_Kingdom_GCA_015131835",
"United_Kingdom_GCA_015131995", "United_Kingdom_GCA_015132775",
"United_Kingdom_GCA_015133115", "United_Kingdom_GCA_015133555",
"United_Kingdom_GCA_015170025", "United_Kingdom_GCA_015170195",
"United_Kingdom_GCA_017235175", "United_Kingdom_GCA_019475725",
"United_Kingdom_GCA_019476025", "United_Kingdom_GCA_019476805",
"United_Kingdom_GCA_019477265", "United_Kingdom_GCA_019525025",
"United_Kingdom_GCA_019543535")
USA = c("United_States_GCA_008396455", 
"United_States_GCA_008396595",  "United_States_GCA_008842065", 
"United_States_GCA_008888505",  "United_States_GCA_008888745", 
"United_States_GCA_008888765",  "United_States_GCA_010434915", 
"United_States_GCA_010435855",  "United_States_GCA_010486415", 
"United_States_GCA_010512695",  "United_States_GCA_010810535", 
"United_States_GCA_010818555",  "United_States_GCA_010840035", 
"United_States_GCA_011207155",  "United_States_GCA_016230385", 
"United_States_GCA_016230445",  "United_States_GCA_016230465", 
"United_States_GCA_016230505",  "United_States_GCA_016230665", 
"United_States_GCA_016230705")

cols <- rep('grey', ncol(a_p_matrix))
cols[colnames(a_p_matrix) %in% Australia] <- "#4DAF4A"
cols[colnames(a_p_matrix) %in% Canada] <- "#377EB8"
cols[colnames(a_p_matrix) %in% China] <- "#E41A1C"
cols[colnames(a_p_matrix) %in% HK] <- "#984EA3"
cols[colnames(a_p_matrix) %in% SA] <- "#66C2A5"
cols[colnames(a_p_matrix) %in% Taiwan] <- "#FC8D62"
cols[colnames(a_p_matrix) %in% USA] <- "#F781BF"
cols[colnames(a_p_matrix) %in% UK] <- "#A65628"

#Colour labels by clusters
A = c('Taiwan_GCA_010253615',
'Taiwan_GCA_010254655',
'Taiwan_GCA_010254835',
'Taiwan_GCA_010255195',
'Taiwan_GCA_010255295',
'United_Kingdom_GCA_015123095',
'United_Kingdom_GCA_015129935',
'United_Kingdom_GCA_015132775',
'United_Kingdom_GCA_017235175',
'United_Kingdom_GCA_019525025',
'United_Kingdom_GCA_019543535',
'Australia_GCA_013220585',
'Australia_GCA_013220775',
'Australia_GCA_013220895')
B = c('Hong_Kong_Sal19_19_contigs',
'Hong_Kong_Sal61_19_contigs',
'Hong_Kong_Sal69_19_contigs',
'Hong_Kong_Sal78_19_contigs',
'United_Kingdom_GCA_015131315',
'United_Kingdom_GCA_019476805',
'Australia_GCA_013218415',
'Australia_GCA_013218615',
'Australia_GCA_013218635',
'Australia_GCA_013218745',
'Australia_GCA_013218805',
'Australia_GCA_013218845',
'Australia_GCA_013218975',
'Australia_GCA_013219015',
'Australia_GCA_013220415',
'Australia_GCA_013220815',
'Australia_GCA_013220865',
'Australia_GCA_013220885',
'Australia_GCA_013226665')
C = c('Hong_Kong_Sal13_19_contigs',
'United_Kingdom_GCA_015127805',
'United_Kingdom_GCA_015131295',
'Canada_GCA_019582215',
'Canada_GCA_019582255',
'Canada_GCA_019582275',
'Canada_GCA_019582375',
'Canada_GCA_019582555',
'Canada_GCA_019582565',
'Canada_GCA_019582595',
'Canada_GCA_019582655',
'Canada_GCA_019582695',
'Canada_GCA_019582735',
'Canada_GCA_019582815',
'Canada_GCA_019583915',
'Canada_GCA_019584035',
'Canada_GCA_019584055',
'Canada_GCA_019584075',
'Canada_GCA_019584265',
'Canada_GCA_019584315',
'Canada_GCA_019586325',
'Canada_GCA_019588685',
'Canada_GCA_019588725',
'Canada_GCA_019588745',
'Canada_GCA_019588765',
'Canada_GCA_019588825',
'Canada_GCA_019588865',
'Canada_GCA_019588985',
'Canada_GCA_019589065',
'Canada_GCA_019589105',
'Canada_GCA_019589125',
'Canada_GCA_019589245',
'Canada_GCA_019593325',
'United_States_GCA_008888505',
'United_States_GCA_010512695',
'Australia_GCA_013218875',
'Australia_GCA_013218905',
'Australia_GCA_013218965',
'Australia_GCA_013220405')
D = c('United_Kingdom_GCA_015127605',
'United_Kingdom_GCA_015127645',
'United_Kingdom_GCA_015128595',
'United_Kingdom_GCA_015130975',
'United_Kingdom_GCA_015131615',
'United_Kingdom_GCA_015131675',
'United_Kingdom_GCA_015131735',
'United_Kingdom_GCA_015131835',
'United_Kingdom_GCA_015131995',
'United_Kingdom_GCA_015133115',
'United_Kingdom_GCA_015170025',
'United_Kingdom_GCA_015170195',
'United_Kingdom_GCA_019475725',
'United_States_GCA_008396455',
'United_States_GCA_008396595',
'United_States_GCA_008842065',
'United_States_GCA_008888745',
'United_States_GCA_008888765',
'United_States_GCA_010434915',
'United_States_GCA_010435855',
'United_States_GCA_010486415',
'United_States_GCA_010810535',
'United_States_GCA_010818555',
'United_States_GCA_011207155',
'United_States_GCA_016230385',
'United_States_GCA_016230445',
'United_States_GCA_016230465',
'United_States_GCA_016230505',
'United_States_GCA_016230665',
'United_States_GCA_016230705',
'Australia_GCA_013221005',
'Australia_GCA_025770365',
'Australia_GCA_013220695',
'South_Africa_GCA_015857065',
'South_Africa_GCA_015857345',
'South_Africa_GCA_015857565',
'South_Africa_GCA_015857805',
'South_Africa_GCA_015857815',
'South_Africa_GCA_015857885',
'South_Africa_GCA_015857965',
'South_Africa_GCA_015858025',
'South_Africa_GCA_015858085',
'South_Africa_GCA_015858125',
'South_Africa_GCA_015858145',
'South_Africa_GCA_015858165',
'South_Africa_GCA_015858325',
'South_Africa_GCA_015858345',
'South_Africa_GCA_015858425',
'South_Africa_GCA_015858465',
'South_Africa_GCA_015858525',
'South_Africa_GCA_015858565',
'South_Africa_GCA_015858585',
'South_Africa_GCA_015858665',
'South_Africa_GCA_015858675',
'South_Africa_GCA_015858765',
'South_Africa_GCA_015858845',
'South_Africa_GCA_015859065',
'South_Africa_GCA_015860085')
E = c('Hong_Kong_Sal10_19_contigs',
'Hong_Kong_Sal100_19_contigs',
'Hong_Kong_Sal14_19_contigs',
'Hong_Kong_Sal18_19_contigs',
'Hong_Kong_Sal20_19_contigs',
'Hong_Kong_Sal25_19_contigs',
'Hong_Kong_Sal26_19_contigs',
'Hong_Kong_Sal27_19_contigs',
'Hong_Kong_Sal32_19_contigs',
'Hong_Kong_Sal35_19_contigs',
'Hong_Kong_Sal36_19_contigs',
'Hong_Kong_Sal50_19_contigs',
'Hong_Kong_Sal52_19_contigs',
'Hong_Kong_Sal53_19_contigs',
'Hong_Kong_Sal56_19_contigs',
'Hong_Kong_Sal58_19_contigs',
'Hong_Kong_Sal6_19_contigs',
'Hong_Kong_Sal63_19_contigs',
'Hong_Kong_Sal64_19_contigs',
'Hong_Kong_Sal65_19_contigs',
'Hong_Kong_Sal66_19_contigs',
'Hong_Kong_Sal67_19_contigs',
'Hong_Kong_Sal68_19_contigs',
'Hong_Kong_Sal70_19_contigs',
'Hong_Kong_Sal72_19_contigs',
'Hong_Kong_Sal73_19_contigs',
'Hong_Kong_Sal75_19_contigs',
'Hong_Kong_Sal76_19_contigs',
'Hong_Kong_Sal77_19_contigs',
'Hong_Kong_Sal82_19_contigs',
'Hong_Kong_Sal83_19_contigs',
'Hong_Kong_Sal85_19_contigs',
'Hong_Kong_Sal86_19_contigs',
'Hong_Kong_Sal91_19_contigs',
'Hong_Kong_Sal93_19_contigs',
'Hong_Kong_Sal94_19_contigs',
'Hong_Kong_Sal98_19_contigs',
'Hong_Kong_Sal99_19_contigs',
'Mainland_China_GCA_023606685',
'Mainland_China_GCA_023606785',
'Mainland_China_GCA_023606825',
'Mainland_China_GCA_023606845',
'Mainland_China_GCA_023606965',
'Mainland_China_GCA_023607125',
'Mainland_China_GCA_023607405',
'Mainland_China_GCA_023607435',
'Mainland_China_GCA_023607525',
'Mainland_China_GCA_023607565',
'Mainland_China_GCA_023607645',
'Mainland_China_GCA_023607785',
'Mainland_China_GCA_023608005',
'Mainland_China_GCA_023608025',
'Mainland_China_GCA_023608035',
'Mainland_China_GCA_023608125',
'United_States_GCA_010840035',
'Australia_GCA_013219655',
'Australia_GCA_013220665',
'Australia_GCA_013220705')

cladecols = rep('white', ncol(a_p_matrix))
cladecols[colnames(a_p_matrix) %in% A] <- "#FFD92F"
cladecols[colnames(a_p_matrix) %in% B] <- "#A6D854"
cladecols[colnames(a_p_matrix) %in% C] <- "#E78AC3"
cladecols[colnames(a_p_matrix) %in% D] <- "#FC8D62"
cladecols[colnames(a_p_matrix) %in% E] <- "#8DA0CB"


heatmap.2(a_p_matrix, col = c("#FFE986","#FF736E"), main = "Absence (yellow) / Presence (red) of genes", trace="none", labRow=FALSE, cexCol=0.2, colCol = cols, dendrogram = "col", key = FALSE, ColSideColors = cladecols)

quartz.save(file = "Roary_heatmap_20231012.jpg", type = "jpeg", dpi = 1200)


## plot Total_unique_core_genes

library(reshape2)
library(ggplot2)
library(grid)
library(gridExtra)

table_input <- read.csv("gene_presence_absence.csv", sep=",", na.strings=c("","NA"))
table_input <- as.data.frame(table_input)
table_values <- within(table_input, rm("Gene","Non.unique.Gene.name","No..isolates","No..sequences","Avg.sequences.per.isolate","Genome.Fragment","Order.within.Fragment","Accessory.Fragment","Accessory.Order.with.Fragment","QC","Min.group.size.nuc","Max.group.size.nuc","Avg.group.size.nuc"))
abscence_presence <- as.matrix(table_values[,-1])
rownames(abscence_presence) <- table_values[,1]
abscence_presence[is.na(abscence_presence)] <- 0
abscence_presence[which(abscence_presence!=0)] <- 1
a_p_matrix <- mapply(abscence_presence, FUN=as.numeric)
a_p_matrix <- matrix(data=a_p_matrix, ncol=length(colnames(abscence_presence)), nrow=length(row.names(abscence_presence)))
row.names(a_p_matrix) <- row.names(abscence_presence)
colnames(a_p_matrix) <- colnames(abscence_presence)

genomes_count <- length(colnames(a_p_matrix))
abscence_presence <- cbind(a_p_matrix, rowSums(a_p_matrix))
summary_table <- matrix(data=NA, nrow=3, ncol=length(colnames(abscence_presence)))
colnames(summary_table) <- colnames(abscence_presence)
rownames(summary_table) <- c("Total_genes","Unique_genes","Core_genes")
summary_table[1,] <- colSums(abscence_presence)
summary_table[2,] <- colSums(abscence_presence[which(abscence_presence[,ncol(abscence_presence)] == 1),])
summary_table[3,] <- colSums(abscence_presence[which(abscence_presence[,ncol(abscence_presence)] >= (genomes_count*0.95)),])
summary_table <- summary_table[,-ncol(summary_table)]
average_table <- data.frame(x=1:6, y=1:6, z=1:6)

average_table[,1] <- c("Total genes analyzed","Orthologous groups","Average gene count","Average core genes","Average unique genes","Total unique genes")
average_table[1,2] <- sum(summary_table[1,])
average_table[2,2] <- length(rownames(abscence_presence))
average_table[3,2] <- median(summary_table[1,])
average_table[4,2] <- length(rownames(abscence_presence[which(abscence_presence[,ncol(abscence_presence)] >= (genomes_count*0.95)),]))
average_table[5,2] <- round(length(rownames(abscence_presence[which(abscence_presence[,ncol(abscence_presence)] == 1),]))/length(colnames(abscence_presence)))
average_table[6,2] <- length(rownames(abscence_presence[which(abscence_presence[,ncol(abscence_presence)] == 1),]))

melt_summary_table <- melt(summary_table)
melt_summary_table <- melt_summary_table[order(melt_summary_table$value),]

Label_colours <- read.csv("csv_Roary_label_colour_list_revised_20231012.csv", header=TRUE)

p1 <- ggplot(melt_summary_table, aes(x = reorder(Var2, value), y = value)) + 
          geom_bar(stat = 'identity', fill="navy") + 
          facet_grid(. ~ Var1, scales = "free_x") + 
          xlab("Genomes") +
          ylab("Count") +
          coord_flip() 
p1 + theme(axis.text.y = element_text(size = 2, color = Label_colours$Colour))

p2 <- ggplot(data=average_table[-c(1,2,6),], aes(x=x, y=y))+
          geom_bar(stat = 'identity', fill="navy") +
          theme (axis.text.x=element_text(angle=90,hjust=1,vjust=0.3),
          axis.title.x = element_blank()) +
          geom_text(aes(y = 10, label = paste("N =" ,y),vjust = 0), colour = "orangered", show.legend=FALSE) +
          ylab("Count")
t1  <- textGrob(paste(c("Total number of genomes:\n",
                        length(colnames(summary_table)),
                        "\n\nNumber of analyzed genes:\n",
                        as.numeric(average_table[1,2]),
                        "\n\nTotal orthologous groups\n",
                        as.numeric(average_table[2,2]),
                        "\n\nTotal unique genes\n",
                        as.numeric(average_table[6,2])), collapse = " "))
lay <- rbind(c(1,1,2),
             c(1,1,2),
             c(1,1,3),
             c(1,1,3))

grid.arrange(p1 + theme(axis.text.y = element_text(size = 2, color = Label_colours$Colour)),p2,t1, layout_matrix = lay)

quartz.save(file = "Roary_summary_colour_20231012.jpg", type = "jpeg", dpi = 1200)
