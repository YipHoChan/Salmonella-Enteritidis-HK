# run abricate
abricate --db vfdb Genome/* > abricate_output_vfdb_20230920.csv

# extract key information from "abricate_output_vfdb_20230920.csv" using excel

# preparation of the csv input file for R
python3
import pandas as pd
df = pd.read_csv("2columns_vfdb_abricate_20230925.csv")
pivot_table = df.pivot_table(index= 'ID', columns = 'VF_GENE', aggfunc = lambda x: 1)
pivot_table = pivot_table.fillna(0)
pivot_table.to_csv("csv_ready_VF_abricate_20230925.csv")

# plot
R
library(ggtree)
library(ggplot2)
library(RColorBrewer)
library(dplyr)

#Read tree
tree = read.tree("resultnewick.tre")
#Read VF data
VF = read.csv("csv_ready_VF_abricate_20230925.csv")
rnames = VF$ID
VF = VF %>% select (-ID)
rownames(VF) <- rnames
VF = as.matrix(VF)
Mycolnames = c("avrA", "csgA", "csgB", "csgC", "csgD", "csgE", "csgF", "csgG", "entA", "entB", "faeC", "faeD", "faeE", "faeF", "faeH", "faeI", "faeJ", "fepC", "fepG", "fimC", "fimD", "fimF", "fimH", "fimI", "gogB", "invA", "invB", "invC", "invE", "invF", "invG", "invH", "invI", "invJ", "lpfA", "lpfB", "lpfC", "lpfD", "lpfE", "mgtB", "mgtC", "mig-14", "misL", "ompA", "orgA", "orgB", "orgC", "pefA", "pefB", "pefC", "pefD", "pipB", "pipB2", "prgH", "prgI", "prgJ", "prgK", "ratB", "rck", "shdA", "sicA", "sicP", "sifA", "sifB", "sinH", "sipA/sspA", "sipB/sspB", "sipC/sspC", "sipD", "slrP", "sodCI", "sopA", "sopB/sigD", "sopD", "sopD2", "sopE2", "spaO", "spaP", "spaQ", "spaR", "spaS", "spiC/ssaB", "sptP", "spvB", "spvC", "spvR", "ssaC", "ssaD", "ssaE", "ssaG", "ssaH", "ssaI", "ssaJ", "ssaK", "ssaL", "ssaM", "ssaN", "ssaO", "ssaP", "ssaQ", "ssaR", "ssaS", "ssaT", "ssaU", "ssaV", "sscA", "sscB", "sseA", "sseB", "sseC", "sseD", "sseE", "sseF", "sseG", "sseI/srfH", "sseJ", "sseK1", "sseL", "sspH2", "steA", "steB", "steC")
colnames(VF) = Mycolnames
#Read geographical information
map <- read.csv("Phylogenetic_tree_metadata_20230904.csv", header=TRUE)

#Set colours
Set1 = brewer.pal(9, "Set1")
Set2 = brewer.pal(12, "Set2")
#palette1
palette1 = Set1[3:1]
#palette2
palette2 = Set1[4]
#palette3
palette3 = Set1[9]
#palette4
palette4 = Set2[1:2]
#palette5
palette5 = Set1[8:7]
#combined palette
combined_palette = c(palette1, palette2, palette3, palette4, palette5)
my_colors = brewer.pal(8, "Set2")

p1 <- ggtree(tree, branch.length="none") %<+% map + geom_tiplab(size=0.9, aes(color=Location)) + geom_tippoint(size =0.5, aes(color=Location)) + scale_color_manual(values = combined_palette) + guides(color = guide_legend(override.aes = list(size = 5)))

p2 = p1 + geom_hilight(node=210, fill=my_colors[2]) + geom_hilight(node=238, fill=my_colors[3]) + geom_hilight(node=294, fill=my_colors[4]) + geom_hilight(node=271, fill=my_colors[5]) + geom_hilight(node=283, fill=my_colors[6])

gheatmap(p2, VF, offset = 3, width = 4, colnames = TRUE, colnames_position = "top", font.size=2, colnames_angle=90, hjust=0, legend_title = "Virulence Factor") +
  scale_fill_gradient(low = "white", high = "#682D99") +
  scale_x_ggtree() +
  scale_y_continuous(expand = c(0.1, 0.8)) + xlab("Cluster                      Location") +
  scale_x_discrete(position = "top") +
  theme(axis.text.x = element_blank(), axis.text.y = element_blank(), axis.title.x = element_text(hjust = 0.1)) + 
  guides(fill = "none") +
  geom_cladelab(node=238, label="E", align=TRUE, offset = -9.6, textcolor='white', barcolor=my_colors[3], barsize=1, geom='label', fill='#B60F23', alpha = .5) +
  geom_cladelab(node=210, label="D", align=TRUE, offset = -9.6, textcolor='white', barcolor=my_colors[2], barsize=1, geom='label', fill='#B60F23', alpha = .5) +
  geom_cladelab(node=294, label="C", align=TRUE, offset = -9.6, textcolor='white', barcolor=my_colors[4], barsize=1, geom='label', fill='#B60F23', alpha = .5) +
  geom_cladelab(node=271, label="B", align=TRUE, offset = -9.6, textcolor='white', barcolor=my_colors[5], barsize=1, geom='label', fill='#B60F23', alpha = .5) +
  geom_cladelab(node=283, label="A", align=TRUE, offset = -9.6, textcolor='white', barcolor=my_colors[6], barsize=1, geom='label', fill='#B60F23', alpha = .5)

#save the high-resolution figure
quartz.save(file = "VF_Standard_Heatmap_20231121.jpg", type = "jpeg", dpi = 1200)
